/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.DirectorDAO;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Director;

/**
 *
  * @author Felipe & betza
 */
public class FormularioDirector extends javax.swing.JFrame {

    /**
     * Creates new form FormularioDirector
     */
    public FormularioDirector() {
        initComponents();
        cargarTabla();
    }

     public void cargarTabla(){
       try {
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID_DIRECTOR");
            modelo.addColumn("NOMBRE");
            modelo.addColumn("APELLIDO");
            modelo.addColumn("FECHA_NACIMIENTO");
            modelo.addColumn("NACIONALIDAD");
            
            DirectorDAO dao = new DirectorDAO();
            ResultSet rs = dao.listar_director();
            while ( rs.next() ) {                
                Object[] fila = new Object[5];
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i+1);
                }
                modelo.addRow(fila);
            }
            tblDirector.setModel(modelo);
       } catch (Exception e) {
           System.out.println("ERROR " + e.getMessage());
       }
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDirector = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnAtras = new javax.swing.JButton();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblApellido = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        lblFechaNacimiento = new javax.swing.JLabel();
        txtFechaNacimiento = new javax.swing.JTextField();
        lblNacionalidad = new javax.swing.JLabel();
        txtNacionalidad = new javax.swing.JTextField();
        btnAgregarDirector = new javax.swing.JButton();
        btnEliminarDirector = new javax.swing.JButton();
        btnModificarDirector = new javax.swing.JButton();
        btnBuscarDirector = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDirector = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        lblVolver = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cinemax - Director");
        setResizable(false);

        lblDirector.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDirector.setText("DIRECTOR");

        btnAtras.setBackground(new java.awt.Color(255, 204, 204));
        btnAtras.setText("<");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNombre.setText("Nombre");

        txtNombre.setBackground(new java.awt.Color(255, 204, 204));

        lblApellido.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblApellido.setText("Apellido");

        txtApellido.setBackground(new java.awt.Color(255, 204, 204));

        lblFechaNacimiento.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFechaNacimiento.setText("Fecha de nacimiento");

        txtFechaNacimiento.setBackground(new java.awt.Color(255, 204, 204));

        lblNacionalidad.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNacionalidad.setText("Nacionalidad");

        txtNacionalidad.setBackground(new java.awt.Color(255, 204, 204));

        btnAgregarDirector.setBackground(new java.awt.Color(255, 204, 204));
        btnAgregarDirector.setText("AGREGAR");
        btnAgregarDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDirectorActionPerformed(evt);
            }
        });

        btnEliminarDirector.setBackground(new java.awt.Color(255, 204, 204));
        btnEliminarDirector.setText("ELIMINAR");
        btnEliminarDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDirectorActionPerformed(evt);
            }
        });

        btnModificarDirector.setBackground(new java.awt.Color(255, 204, 204));
        btnModificarDirector.setText("MODIFICAR");
        btnModificarDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarDirectorActionPerformed(evt);
            }
        });

        btnBuscarDirector.setBackground(new java.awt.Color(255, 204, 204));
        btnBuscarDirector.setText("BUSCAR");
        btnBuscarDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarDirectorActionPerformed(evt);
            }
        });

        tblDirector.setBackground(new java.awt.Color(255, 204, 204));
        tblDirector.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDirector);

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("(dd/mm/aaaa)");

        lblVolver.setText("Volver a pelicula");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAtras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblVolver)
                        .addGap(149, 149, 149)
                        .addComponent(lblDirector)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblApellido)
                            .addComponent(lblFechaNacimiento)
                            .addComponent(lblNacionalidad)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                                .addComponent(txtNacionalidad, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                .addComponent(txtApellido, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1))
                .addGap(19, 19, 19))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(btnAgregarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDirector)
                    .addComponent(btnAtras)
                    .addComponent(lblVolver))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(lblApellido)
                        .addGap(7, 7, 7)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(lblFechaNacimiento)
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(lblNacionalidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNacionalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificarDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        // TODO add your handling code here:
        FormularioPelicula fp = new FormularioPelicula();
        fp.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    private void btnAgregarDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDirectorActionPerformed
        try {                                                   
            // TODO add your handling code here:
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            sdf.setLenient(false);
            String fecha_txt = txtFechaNacimiento.getText();
            
            Date fecha_date = null;
            
            try {
                fecha_date = sdf.parse(fecha_txt);
            } catch (ParseException e) {
                JOptionPane.showMessageDialog(null, "La fecha debe estar en el formato dd/mm/yyyy!");
            }
            
            String nacionalidad = txtNacionalidad.getText();
            
            if (fecha_date != null) {
                Director d = new Director(nombre, apellido, fecha_date, nacionalidad);
                try {
                    DirectorDAO dao = new DirectorDAO();
                    boolean resp = dao.agregarDirector(d);
                    if (resp) {
                        JOptionPane.showMessageDialog(null,"Director AGREGADO!");
                        cargarTabla();
                        limpiar();
                    } else {
                        JOptionPane.showMessageDialog(null, "Director NO AGREGADO!");
                    }
                } catch (Exception e) {
                    System.out.println("ERROR: " + e.getMessage());
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(FormularioDirector.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FormularioDirector.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAgregarDirectorActionPerformed

    private void btnEliminarDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDirectorActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblDirector.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UNA FILA DE LA TABLA!");
                return;
            }
            String txt_dir = tblDirector.getValueAt(row, 0).toString();
            int dir = Integer.parseInt(txt_dir);
            DirectorDAO dao = new DirectorDAO();
            boolean resp = dao.eliminarDirector(dir);
            if (resp) {
                JOptionPane.showMessageDialog(null, "DIRECTOR ELIMINADO");
                    cargarTabla();
                    limpiar();                
            }else{
                JOptionPane.showMessageDialog(null, "DIRECTOR NO ELIMINADO!");
            }
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarDirectorActionPerformed

    private void btnModificarDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarDirectorActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblDirector.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "DEBE BUSCAR UN DIRECTOR ANTES DE MODIFICAR!");
                return;
            }
            
            String codigo = tblDirector.getValueAt(row, 0).toString();
            int int_codigo = Integer.parseInt(codigo); 
           
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String fecha_txt = txtFechaNacimiento.getText();
            Date fecha_sql = sdf.parse(fecha_txt);
            
            String nacionalidad = txtNacionalidad.getText();
            
            Director d = new Director(int_codigo, nombre, apellido, fecha_sql, nacionalidad);
            
            DirectorDAO dao = new DirectorDAO();
            boolean resp = dao.modificarDirector(d);
            if (resp) {
                JOptionPane.showMessageDialog(null, "DIRECTOR MODIFICADO!");
                    cargarTabla();
                    limpiar();               
            }else{
                JOptionPane.showMessageDialog(null, "DIRECTOR NO MODIFICADO!");
            }
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnModificarDirectorActionPerformed

    private void btnBuscarDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarDirectorActionPerformed
        try {
            int row = tblDirector.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "DEBE SELECCIONAR UNA FILA DE LA TABLA!");
                return;
            }
            String codigo = tblDirector.getValueAt(row, 0).toString();
            int int_codigo = Integer.parseInt(codigo);
            
            DirectorDAO dao = new DirectorDAO();
            Director d = dao.buscarDirector(int_codigo);
            txtNombre.setText(d.getPnombre());
            txtApellido.setText(d.getAppaterno());
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            String fecha_txt = sdf.format(d.getFecha_nacimiento());
            
            txtFechaNacimiento.setText(fecha_txt);
            txtNacionalidad.setText(d.getNacionalidad());
            
        } catch (Exception e) {
            System.out.println("ERROR: b " + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarDirectorActionPerformed

    public void limpiar(){
        txtNombre.setText("");
        txtApellido.setText("");
        txtFechaNacimiento.setText("");
        txtNacionalidad.setText("");
        txtNombre.requestFocus();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioDirector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioDirector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioDirector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioDirector.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioDirector().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDirector;
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscarDirector;
    private javax.swing.JButton btnEliminarDirector;
    private javax.swing.JButton btnModificarDirector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblFechaNacimiento;
    private javax.swing.JLabel lblNacionalidad;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblVolver;
    private javax.swing.JTable tblDirector;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtNacionalidad;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
