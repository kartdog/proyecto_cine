
package vista;

import controlador.DirectorDAO;
import controlador.PeliculaDAO;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Accion;
import modelo.Director;
import modelo.Independiente;
import modelo.Pelicula;
import modelo.Suspenso;

/**
 *
 * @author Felipe
 */
public class FormularioPelicula extends javax.swing.JFrame {

List<Director> lista_director = new ArrayList();
    
    /**
     * Creates new form FormularioPelicula
     */
    public FormularioPelicula() {
        initComponents();
        cargarComboDirector();
        cargarTabla();
    }

    public void cargarTabla(){
        try {
            //1. vamos a crear un DefaultTableModel:
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID PELICULA");
            modelo.addColumn("ID DIRECTOR");
            modelo.addColumn("TÍTULO");
            modelo.addColumn("FECHA DE LANZAMIENTO");
            modelo.addColumn("DURACIÓN");
            modelo.addColumn("RATING");
            modelo.addColumn("CANT. EXPLOSION");
            modelo.addColumn("TIENE CGI");
            
            //2. llamamos al dao:
            PeliculaDAO dao = new PeliculaDAO();
            ResultSet rs = dao.listar_peliculas();
            
            //3. cargamos la información del ResultSet en el modelo:
            while ( rs.next() ) {                
                Object[] fila = new Object[8];
                for (int i = 0; i < 8; i++) {
                    fila[i] = rs.getObject(i+1);
                }
                modelo.addRow(fila);
            }
            
            //4. entregar el modelo a la tabla:
            tblPelicula.setModel(modelo);
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage() );
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblDirector = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblPelicula = new javax.swing.JLabel();
        btnAgregarDirector = new javax.swing.JButton();
        cboDirector = new javax.swing.JComboBox<>();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        lblTitulo = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        lblFechaLanzamiento = new javax.swing.JLabel();
        txtFechaLanzamiento = new javax.swing.JTextField();
        lblDuracion = new javax.swing.JLabel();
        txtDuracion = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtRating = new javax.swing.JTextField();
        rbAccion = new javax.swing.JRadioButton();
        rbSuspenso = new javax.swing.JRadioButton();
        rbIndependiete = new javax.swing.JRadioButton();
        lblTipo = new javax.swing.JLabel();
        lblAccion = new javax.swing.JLabel();
        txtCantExplosion = new javax.swing.JTextField();
        lblCantExplosion = new javax.swing.JLabel();
        lblCGI = new javax.swing.JLabel();
        cbxCGI = new javax.swing.JCheckBox();
        lblSuspenso = new javax.swing.JLabel();
        lblCantMuertes = new javax.swing.JLabel();
        txtCantMuertes = new javax.swing.JTextField();
        lblCantGritos = new javax.swing.JLabel();
        txtCantGritos = new javax.swing.JTextField();
        lblIndependiente = new javax.swing.JLabel();
        lblPresupuesto = new javax.swing.JLabel();
        txtPresupuesto = new javax.swing.JTextField();
        lblCantReparto = new javax.swing.JLabel();
        txtCantReparto = new javax.swing.JTextField();
        lblAgregarDirector = new javax.swing.JLabel();
        btnAgregarPelicula = new javax.swing.JButton();
        btnEliminarPelicula = new javax.swing.JButton();
        btnModificarPelicula = new javax.swing.JButton();
        btnBuscarPelicula = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPelicula = new javax.swing.JTable();
        btnBuscarLista = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cinemax - Pelicula");
        setResizable(false);

        lblDirector.setForeground(new java.awt.Color(102, 102, 102));
        lblDirector.setText("Director");

        lblPelicula.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblPelicula.setText("PELICULA");

        btnAgregarDirector.setText("+");
        btnAgregarDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarDirectorActionPerformed(evt);
            }
        });

        cboDirector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblCodigo.setForeground(new java.awt.Color(102, 102, 102));
        lblCodigo.setText("Codigo");

        lblTitulo.setForeground(new java.awt.Color(102, 102, 102));
        lblTitulo.setText("Título");

        lblFechaLanzamiento.setForeground(new java.awt.Color(102, 102, 102));
        lblFechaLanzamiento.setText("Fecha de lanzamiento");

        lblDuracion.setForeground(new java.awt.Color(102, 102, 102));
        lblDuracion.setText("Duración");

        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Rating");

        rbAccion.setForeground(new java.awt.Color(102, 102, 102));
        rbAccion.setText("Accion");

        rbSuspenso.setForeground(new java.awt.Color(102, 102, 102));
        rbSuspenso.setText("Suspenso");

        rbIndependiete.setForeground(new java.awt.Color(102, 102, 102));
        rbIndependiete.setText("Independiente");

        lblTipo.setText("Tipo de pelicula");
        lblTipo.setToolTipText("");

        lblAccion.setText("Accion");

        lblCantExplosion.setForeground(new java.awt.Color(102, 102, 102));
        lblCantExplosion.setText("Cantidad de explosion");

        lblCGI.setForeground(new java.awt.Color(102, 102, 102));
        lblCGI.setText("Tiene CGI");

        lblSuspenso.setText("Suspenso");

        lblCantMuertes.setForeground(new java.awt.Color(102, 102, 102));
        lblCantMuertes.setText("Cantidad de muertes");

        lblCantGritos.setForeground(new java.awt.Color(102, 102, 102));
        lblCantGritos.setText("Cantidad de gritos");

        lblIndependiente.setText("Independiente");

        lblPresupuesto.setForeground(new java.awt.Color(102, 102, 102));
        lblPresupuesto.setText("Presupuesto");

        lblCantReparto.setForeground(new java.awt.Color(102, 102, 102));
        lblCantReparto.setText("Cantidad de reparto");

        lblAgregarDirector.setForeground(new java.awt.Color(102, 102, 102));
        lblAgregarDirector.setText("Agregar director");

        btnAgregarPelicula.setText("AGREGAR");
        btnAgregarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarPeliculaActionPerformed(evt);
            }
        });

        btnEliminarPelicula.setText("ELIMINAR");
        btnEliminarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPeliculaActionPerformed(evt);
            }
        });

        btnModificarPelicula.setText("MODIFICAR");
        btnModificarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPeliculaActionPerformed(evt);
            }
        });

        btnBuscarPelicula.setText("BUSCAR");
        btnBuscarPelicula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPeliculaActionPerformed(evt);
            }
        });

        tblPelicula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPelicula);

        btnBuscarLista.setText("BUSCAR POR LISTA");
        btnBuscarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnBuscarLista)
                .addGap(200, 200, 200))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblCodigo)
                                            .addComponent(lblTitulo)
                                            .addComponent(txtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                            .addComponent(txtCodigo)
                                            .addComponent(jLabel1)
                                            .addComponent(txtRating))
                                        .addGap(40, 40, 40)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblDuracion)
                                            .addComponent(lblFechaLanzamiento)
                                            .addComponent(txtFechaLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cboDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblDirector))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblAgregarDirector)
                                                    .addComponent(btnAgregarDirector)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblAccion)
                                                .addGap(136, 136, 136)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(lblSuspenso)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(lblCantMuertes)
                                                            .addComponent(lblCantGritos)
                                                            .addComponent(txtCantMuertes, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtCantGritos, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(btnEliminarPelicula)
                                                .addGap(73, 73, 73)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(87, 87, 87)
                                                .addComponent(lblIndependiente))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(93, 93, 93)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(lblPresupuesto)
                                                    .addComponent(lblCantReparto)
                                                    .addComponent(txtCantReparto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnModificarPelicula)
                                                .addGap(53, 53, 53)
                                                .addComponent(btnBuscarPelicula))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(rbAccion)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rbSuspenso)
                                                .addGap(76, 76, 76)
                                                .addComponent(rbIndependiete))
                                            .addComponent(lblCantExplosion)
                                            .addComponent(lblCGI)
                                            .addComponent(cbxCGI)
                                            .addComponent(txtCantExplosion, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lblTipo)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnAgregarPelicula)
                                        .addGap(433, 433, 433)))
                                .addGap(39, 39, 39)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(517, 517, 517)
                        .addComponent(lblPelicula)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lblPelicula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblCodigo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblTitulo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblDirector)
                                    .addComponent(lblAgregarDirector))
                                .addComponent(jLabel1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnAgregarDirector)
                                .addComponent(cboDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(lblTipo)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(rbAccion)
                                .addComponent(rbSuspenso)
                                .addComponent(rbIndependiete))
                            .addGap(12, 12, 12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblAccion)
                                .addComponent(lblSuspenso)
                                .addComponent(lblIndependiente))
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCantExplosion)
                                .addComponent(lblCantMuertes)
                                .addComponent(lblPresupuesto))
                            .addGap(1, 1, 1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCantExplosion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCantMuertes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPresupuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblCGI)
                                .addComponent(lblCantGritos)
                                .addComponent(lblCantReparto))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbxCGI)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtCantGritos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCantReparto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblFechaLanzamiento)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFechaLanzamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lblDuracion)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarLista)
                    .addComponent(btnBuscarPelicula)
                    .addComponent(btnModificarPelicula)
                    .addComponent(btnEliminarPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarPelicula))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarDirectorActionPerformed
        // TODO add your handling code here:
        FormularioDirector fd = new FormularioDirector();
        fd.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnAgregarDirectorActionPerformed

    public void cargarComboDirector(){
        try {
            DirectorDAO dao = new DirectorDAO();
            lista_director = dao.listar_directores();
            cboDirector.removeAllItems();
            cboDirector.addItem("Seleccionar");
            for (Director d : lista_director) {
                cboDirector.addItem(d.getPnombre());
            }
        } catch (Exception e) {
        }
    }
    
    private void btnAgregarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarPeliculaActionPerformed
        // TODO add your handling code here:
        try {
        
        if (rbAccion.isSelected()) {
        String txt_id = txtCodigo.getText();
        int id = Integer.parseInt(txt_id);
        
        int index_id_dir = cboDirector.getSelectedIndex();
        int id_dir = lista_director.get(index_id_dir-1).getId_director();
        
        String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
        String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();
        
        Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
        String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();
     
        Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);
       
        
        String titulo = txtTitulo.getText();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fecha_txt = txtFechaLanzamiento.getText();
        Date fecha_date = sdf.parse(fecha_txt);       
        
        String txt_duracion = txtDuracion.getText();
        int duracion = Integer.parseInt(txt_duracion);
        String txt_rating = txtRating.getText();
        int rating = Integer.parseInt(txt_rating);
        String txt_cantExplosion = txtCantExplosion.getText();
        int cant_explosion = Integer.parseInt(txt_cantExplosion);
        
        boolean CGI = cbxCGI.isSelected();
        Accion a = new Accion(cant_explosion, CGI, id, d, titulo, fecha_date, duracion, rating);
            try {
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.agregarPelicula(a);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA DE ACCIÓN AGREGADA!");
                    cargarTabla();
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA DE ACCIÓN NO AGREGADA!");
                }
            } catch (Exception e) {
                System.out.println("ERROR: " + e.getMessage());
            }
        }else if(rbSuspenso.isSelected()){
        String txt_id = txtCodigo.getText();
        int id = Integer.parseInt(txt_id);
        
        int index_id_dir = cboDirector.getSelectedIndex();
        int id_dir = lista_director.get(index_id_dir-1).getId_director();
        
        String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
        String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();
        
        Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
        String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();
     
        Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);
       
        
        String titulo = txtTitulo.getText();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fecha_txt = txtFechaLanzamiento.getText();
        Date fecha_date = sdf.parse(fecha_txt);       
        
        String txt_duracion = txtDuracion.getText();
        int duracion = Integer.parseInt(txt_duracion);
        String txt_rating = txtRating.getText();
        int rating = Integer.parseInt(txt_rating);
        
        String txt_cantMuerte = txtCantMuertes.getText();
        int cant_muerte = Integer.parseInt(txt_cantMuerte);
        String txt_cantGrito = txtCantGritos.getText();
        int cant_grito = Integer.parseInt(txt_cantGrito);
        
        
        Suspenso s = new Suspenso(cant_muerte, cant_grito, id, d, titulo, fecha_date, duracion, rating);
            try {
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.agregarPelicula(s);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA DE SUSPENSO AGREGADA!");
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA DE SUSPENSO NO AGREGADA!");
                }
            } catch (Exception e) {
                System.out.println("ERROR: " + e.getMessage());
            }           
        }else if(rbIndependiete.isSelected()){
        String txt_id = txtCodigo.getText();
        int id = Integer.parseInt(txt_id);
        
        int index_id_dir = cboDirector.getSelectedIndex();
        int id_dir = lista_director.get(index_id_dir-1).getId_director();
        
        String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
        String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();
        
        Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
        String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();
     
        Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);
       
        
        String titulo = txtTitulo.getText();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String fecha_txt = txtFechaLanzamiento.getText();
        Date fecha_date = sdf.parse(fecha_txt);       
        
        String txt_duracion = txtDuracion.getText();
        int duracion = Integer.parseInt(txt_duracion);
        String txt_rating = txtRating.getText();
        int rating = Integer.parseInt(txt_rating);
        
        String txt_Presupuesto = txtPresupuesto.getText();
        int presupuesto = Integer.parseInt(txt_Presupuesto);
        String txt_cantReparto = txtCantReparto.getText();
        int cant_reparto = Integer.parseInt(txt_cantReparto);
        
        
        Independiente i = new Independiente(presupuesto, cant_reparto, id, d, titulo, fecha_date, duracion, rating);
            try {
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.agregarPelicula(i);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA INDEPENDIENTE AGREGADA!");
                    cargarTabla();
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA INDEPENDIENTE NO AGREGADA!");
                }
            } catch (Exception e) {
                System.out.println("ERROR: " + e.getMessage());
            }            
        }             
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarPeliculaActionPerformed

    private void btnEliminarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPeliculaActionPerformed
        // TODO add your handling code here:
        try {
            String txt_id = txtCodigo.getText();
            int id = Integer.parseInt(txt_id);
            
            PeliculaDAO dao = new PeliculaDAO();
            boolean resp = dao.eliminarPelicula(id);
            if (resp) {
                JOptionPane.showMessageDialog(null, "PELICULA ELIMINADA");
            }else{
                JOptionPane.showMessageDialog(null, "PELICULA NO ELIMINADA");
            }
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarPeliculaActionPerformed

    private void btnModificarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPeliculaActionPerformed
        // TODO add your handling code here:
        try {
            if (rbAccion.isSelected()) {
                String txt_id = txtCodigo.getText();
                int id = Integer.parseInt(txt_id);

                int index_id_dir = cboDirector.getSelectedIndex();
                int id_dir = lista_director.get(index_id_dir-1).getId_director();

                String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
                String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();

                Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
                String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();

                Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);           

                String titulo = txtTitulo.getText();

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fecha_txt = txtFechaLanzamiento.getText();
                Date fecha_sql = sdf.parse(fecha_txt);

                String txt_duracion = txtDuracion.getText();
                int duracion = Integer.parseInt(txt_duracion);

                String txt_rating = txtRating.getText();
                int rating = Integer.parseInt(txt_rating);
                
                String txt_cantExplosion = txtCantExplosion.getText();
                int cant_explosion = Integer.parseInt(txt_cantExplosion);
                
                boolean CGI = cbxCGI.isSelected();
                Accion a = new Accion(cant_explosion, CGI, id, d, titulo, fecha_sql, duracion, rating);
                
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.modificarPelicula(a);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA DE ACCION MODIFICADA");
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA DE ACCION NO MODIFICADA");
                }
            }else if(rbSuspenso.isSelected()){
                String txt_id = txtCodigo.getText();
                int id = Integer.parseInt(txt_id);

                int index_id_dir = cboDirector.getSelectedIndex();
                int id_dir = lista_director.get(index_id_dir-1).getId_director();

                String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
                String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();

                Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
                String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();

                Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);           

                String titulo = txtTitulo.getText();

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fecha_txt = txtFechaLanzamiento.getText();
                Date fecha_sql = sdf.parse(fecha_txt);

                String txt_duracion = txtDuracion.getText();
                int duracion = Integer.parseInt(txt_duracion);

                String txt_rating = txtRating.getText();
                int rating = Integer.parseInt(txt_rating);
                
                String txt_cantMuerte = txtCantMuertes.getText();
                int cant_muerte = Integer.parseInt(txt_cantMuerte);
                
                String txt_cantGrito = txtCantGritos.getText();
                int cant_grito = Integer.parseInt(txt_cantGrito);
                Suspenso s = new Suspenso(cant_muerte, cant_grito, id, d, titulo, fecha_sql, duracion, rating);
                
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.modificarPelicula(s);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA DE SUSPENSO MODIFICADA");
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA DE SUSPENSO NO MODIFICADA");
                }                
            }else{
                String txt_id = txtCodigo.getText();
                int id = Integer.parseInt(txt_id);

                int index_id_dir = cboDirector.getSelectedIndex();
                int id_dir = lista_director.get(index_id_dir-1).getId_director();

                String nombre_dir = lista_director.get(index_id_dir-1).getPnombre();
                String appaterno_dir = lista_director.get(index_id_dir-1).getAppaterno();

                Date fecha_dir = lista_director.get(index_id_dir-1).getFecha_nacimiento();
                String nacionalidad_dir = lista_director.get(index_id_dir-1).getNacionalidad();

                Director d = new Director(id_dir, nombre_dir, appaterno_dir, fecha_dir, nacionalidad_dir);           

                String titulo = txtTitulo.getText();

                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                String fecha_txt = txtFechaLanzamiento.getText();
                Date fecha_sql = sdf.parse(fecha_txt);

                String txt_duracion = txtDuracion.getText();
                int duracion = Integer.parseInt(txt_duracion);

                String txt_rating = txtRating.getText();
                int rating = Integer.parseInt(txt_rating);
                
                String txt_presupuesto = txtPresupuesto.getText();
                int presupuesto = Integer.parseInt(txt_presupuesto);
                
                String txt_cantReparto = txtCantReparto.getText();
                int reparto = Integer.parseInt(txt_cantReparto);
                Independiente i = new Independiente(presupuesto, reparto, id, d, titulo, fecha_sql, duracion, rating);
                
                PeliculaDAO dao = new PeliculaDAO();
                boolean resp = dao.modificarPelicula(i);
                if (resp) {
                    JOptionPane.showMessageDialog(null, "PELICULA INDEPENDIENTE MODIFICADA");
                }else{
                    JOptionPane.showMessageDialog(null, "PELICULA INDEPENDIENTE NO MODIFICADA");
                }               
            }
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnModificarPeliculaActionPerformed

    private void btnBuscarPeliculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPeliculaActionPerformed
        // TODO add your handling code here:
        
        try {
            
            String txt_codigo = txtCodigo.getText();
            int codigo = Integer.parseInt(txt_codigo);
            
            PeliculaDAO dao = new PeliculaDAO();
            // Accion a = dao.buscarPelicula(codigo);
            
            
            txtCodigo.setText(txt_codigo);
            txtDuracion.setText(txtDuracion.getText());
           
            
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
        
    }//GEN-LAST:event_btnBuscarPeliculaActionPerformed

    private void btnBuscarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarListaActionPerformed
        // TODO add your handling code here:
        try {
            int row = tblPelicula.getSelectedRow();
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "NO HA SELECCIONADO FILA, ELIJA UNA.");
                return;
            }
            
            String codigo = tblPelicula.getValueAt(row, 0).toString();
            int int_codigo = Integer.parseInt(codigo);
            PeliculaDAO dao = new PeliculaDAO();
            Accion a = (Accion) dao.buscarPelicula(int_codigo);
            txtTitulo.setText(a.getTitulo());
            
        } catch (Exception e) {
            System.out.println("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarListaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormularioPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormularioPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormularioPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormularioPelicula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormularioPelicula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarDirector;
    private javax.swing.JButton btnAgregarPelicula;
    private javax.swing.JButton btnBuscarLista;
    private javax.swing.JButton btnBuscarPelicula;
    private javax.swing.JButton btnEliminarPelicula;
    private javax.swing.JButton btnModificarPelicula;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboDirector;
    private javax.swing.JCheckBox cbxCGI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAccion;
    private javax.swing.JLabel lblAgregarDirector;
    private javax.swing.JLabel lblCGI;
    private javax.swing.JLabel lblCantExplosion;
    private javax.swing.JLabel lblCantGritos;
    private javax.swing.JLabel lblCantMuertes;
    private javax.swing.JLabel lblCantReparto;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblDirector;
    private javax.swing.JLabel lblDuracion;
    private javax.swing.JLabel lblFechaLanzamiento;
    private javax.swing.JLabel lblIndependiente;
    private javax.swing.JLabel lblPelicula;
    private javax.swing.JLabel lblPresupuesto;
    private javax.swing.JLabel lblSuspenso;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JRadioButton rbAccion;
    private javax.swing.JRadioButton rbIndependiete;
    private javax.swing.JRadioButton rbSuspenso;
    private javax.swing.JTable tblPelicula;
    private javax.swing.JTextField txtCantExplosion;
    private javax.swing.JTextField txtCantGritos;
    private javax.swing.JTextField txtCantMuertes;
    private javax.swing.JTextField txtCantReparto;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDuracion;
    private javax.swing.JTextField txtFechaLanzamiento;
    private javax.swing.JTextField txtPresupuesto;
    private javax.swing.JTextField txtRating;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
